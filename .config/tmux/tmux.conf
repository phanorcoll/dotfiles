if-shell 'tmux has-session -t initsesh 2>/dev/null' 'attach-session -t initsesh' 'new-session -s initsesh'

# keybinding +$ to rename the current session
# keybinding +, to rename the current window
# Enable RGB colour if running in xterm(1)
set-option -g default-terminal "xterm-256color"
set-option -sa terminal-overrides ",xterm*:Tc"
set-option -g focus-events on
set-option -g display-time 3000
# renumber all windows when any window is closed
set -g renumber-windows on
# use system clipboard
set -g set-clipboard on
# update the status bar every 10 seconds
set -g status-interval 10
# enable mouse support
set -g mouse on

# Start windows and paines ad 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# reload configuration
unbind r
bind R source-file ~/.config/tmux/tmux.conf \; display-message " 󱓏  Config sourced"

set -g set-titles off          # set terminal title
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time
set -g status-interval 10     # redraw status line every 10 seconds

# activity
set -g monitor-activity on
set -g visual-activity off

# change prexix from C-b
unbind C-b
set -g prefix C-s
bind C-s send-prefix

# create a new session
bind N command-prompt -p "  Enter new session name:" "new-session -d -s '%%'"

# rename current session
bind r command-prompt -p "  Enter new session name:" "\
run-shell 'tmux rename-session \"%%\"'"

# close active session
bind X command-prompt -p " 󰱝 kill session? (y/n)" "\
run-shell 'if [ \"%%\" = \"y\" ]; then \
tmux switch-client -n; \
tmux kill-session -t \"$(tmux display-message -p \"#S\")\"; \
fi'"

#use vim key map to travel between panes
setw -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-b send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# move across windows
bind -n M-H previous-window
bind -n M-L next-window

# Open panes in current directory
bind '+' split-window -v -c "#{pane_current_path}"
bind '-' split-window -h -c "#{pane_current_path}"

set -g status-position top

bind-key m display-popup \
  -w 100% -h 100% \
  -B \
  -E "~/go/bin/muxie"

bind-key a display-popup \
  -e 'DISP1PWD=false' \
  -T "󰈙 Active sessions" \
  -w 40% -h 40% \
  -E "tmux list-sessions -F '#S' \
    | fzf --height 50% --border --prompt '󰈙 Sessions: ' \
    | xargs -I {} tmux switch-client -t {}" \

bind-key q display-popup \
  -e 'DISP1PWD=false' \
  -T "󰈙 Create new Session" \
  -w 40% -h 40% \
  -E "tmux new-session -s \$(fzf --height 50% --border --prompt '󰈙 New Session: ')"

bind C-n display-popup \
  -e 'DISP1PWD=false' \
  -T "󰈙 Create new Session" \
  -w 40% -h 10% \
  -E 'bash -i -c "read -p \"Session name: \" name; tmux new-session -d -s \$name && tmux switch-client -t \$name"'

# https://github.com/tmux-plugins/tpm
# List of plugins
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'

# https://github.com/omerxx/tmux-floax
set -g @plugin 'omerxx/tmux-floax'
set -g @floax-width '80%'
set -g @floax-height '80%'
set -g @floax-border-color 'magenta'
set -g @floax-text-color 'blue'
set -g @floax-change-path 'true'

set -g @plugin 'dracula/tmux'
set -g @dracula-refresh-rate 3
set -g @dracula-plugins "cwd cpu-usage ram-usage battery"
set -g @dracula-show-fahrenheit false
set -g @dracula-show-location true
set -g @dracula-transparent-powerline-bg true
set -g @dracula-show-left-icon "#S"
set -g @dracula-left-icon-padding 1
set -g @dracula-battery-label false
set -g @dracula-no-battery-label " "
set -g @dracula-show-battery-status true
set -g @dracula-cwd-max-dirs "2"
set -g @dracula-cwd-max-chars "0"

set -g @plugin 'tmux-plugins/tpm'        # load tpm
run "~/.config/tmux/plugins/tpm/tpm" # run tpm (always end of file)
